import datetime
import random

from src.practices.sort.algo.selection import selection_sort
from src.practices.sort.algo.bubble import bubble_sort
from src.practices.sort.algo.insertion import insertion_sort
from src.practices.sort.algo.merge import merge_sort
from src.practices.sort.algo.heap import heap_sort


def scan_inputs():
    l = int(input())
    arr = []
    if l <= 0:
        arr = [1142, 730, 1975, 621, 1203, 528, 660, 1217, 557, 122, 1182, 865, 389, 104, 1459, 999, 992, 1275, 1553, 770, 1325, 1465, 1315, 1846, 1721, 1434, 312, 59, 637, 1359, 1046, 1138, 1040, 580, 261, 727, 1277, 1370, 1840, 928, 576, 946, 1540, 1647, 606, 943, 879, 1213, 1487, 957, 291, 1120, 1225, 147, 1185, 1947, 525, 413, 1278, 714, 1535, 1617, 1253, 1161, 1306, 1791, 408, 605, 49, 508, 420, 53, 1555, 601, 711, 841, 1014, 1238, 856, 990, 556, 1668, 1492, 1160, 1990, 1589, 352, 67, 931, 1246, 1640, 1638, 1976, 724, 1093, 58, 1907, 1369, 613, 1251, 602, 323, 1904, 1517, 648, 120, 911, 712, 558, 1056, 1787, 1027, 1034, 295, 786, 823, 466, 1376, 1146, 829, 805, 1219, 1353, 1330, 670, 1169, 1733, 1666, 1320, 139, 1254, 395, 71, 1799, 1778, 747, 750, 1100, 15, 1635, 656, 1404, 1816, 175, 387, 1079, 610, 1110, 477, 855, 445, 1533, 1229, 345, 767, 845, 1567, 887, 36, 1933, 1537, 1754, 1448, 1777, 215, 1349, 1483, 1218, 1111, 1685, 1187, 1323, 1704, 1761, 393, 1232, 42, 286, 195, 1136, 167, 972, 691, 1478, 29, 1762, 1945, 748, 1890, 636, 194, 1464, 280, 214, 1854, 1125, 642, 1559, 1565, 852, 1741, 1728, 1752, 782, 272, 1595, 1654, 1601, 749, 83, 1568, 181, 1319, 1175, 1097, 99, 502, 1020, 1670, 708, 1033, 1472, 1358, 1853, 1090, 310, 1021, 1326, 1153, 20, 1437, 951, 384, 1739, 385, 322, 1705, 321, 473, 695, 1181, 906, 801, 756, 863, 746, 1697, 3, 1001, 1806, 256, 1037, 548, 129, 1521, 704, 1378, 759, 1830, 1583, 1244, 1826, 231, 1908, 904, 600, 1818, 1392, 1214, 696, 144, 1002, 35, 64, 293, 105, 1677, 485, 1084, 1297, 961, 1734, 1718, 1881, 1293, 229, 768, 1316, 1984, 266, 1781, 7, 1686, 378, 1730, 1547, 1861, 1958, 1389, 1485, 1258, 968, 13, 1825, 825, 1294, 1807, 141, 1395, 1440, 1847, 497, 1173, 1197, 1512, 94, 440, 1184, 1311, 1364, 424, 707, 50, 340, 510, 1539, 318, 1910, 1091, 960, 555, 948, 41, 371, 1377, 860, 103, 1171, 1530, 1586, 729, 659, 827, 796, 1939, 163, 236, 1648, 1078, 343, 465, 1070, 988, 1156, 1889, 1582, 1564, 1996, 1653, 501, 162, 625, 1745, 1399, 317, 159, 1520, 1604, 298, 1877, 1966, 1010, 1006, 489, 1905, 1101, 820, 912, 68, 1211, 1672, 672, 1157, 136, 1446, 944, 506, 901, 1047, 573, 1714, 1094, 1141, 1288, 1962, 157, 255, 1937, 828, 1835, 993, 1207, 165, 1875, 644, 536, 230, 1191, 1955, 1231, 1585, 1362, 66, 504, 1498, 1031, 663, 1621, 1131, 221, 981, 809, 1260, 334, 126, 14, 842, 1381, 1044, 69, 569, 363, 1401, 446, 717, 1542, 346, 1511, 1080, 1969, 1089, 145, 998, 77, 338, 1461, 1095, 647, 100, 1051, 599, 664, 375, 1856, 381, 975, 1921, 881, 1682, 1815, 1580, 907, 306, 1468, 1335, 1124, 1616, 776, 1139, 452, 476, 1865, 1263, 1289, 125, 1132, 700, 915, 1573, 1196, 390, 1455, 976, 1943, 128, 1658, 1732, 512, 361, 273, 1636, 1304, 1913, 895, 376, 1610, 460, 566, 959, 341, 1526, 1694, 572, 430, 303, 1724, 1974, 1519, 292, 429, 1823, 1909, 564, 1915, 806, 1105, 1941, 1336, 213, 1967, 787, 963, 1454, 874, 1072, 1221, 1298, 1360, 854, 1868, 1075, 132, 817, 463, 1701, 1983, 1932, 1897, 149, 332, 779, 1599, 971, 867, 589, 314, 1927, 1210, 1148, 1771, 316, 661, 1233, 966, 1419, 1673, 462, 1022, 1926, 969, 668, 1074, 354, 1759, 1152, 1327, 1003, 278, 212, 1507, 80, 60, 1340, 65, 169, 1383, 1515, 1501, 1436, 1870, 1121, 115, 1042, 595, 926, 802, 61, 1488, 156, 1012, 987, 154, 1780, 617, 1600, 1720, 891, 967, 1785, 148, 1649, 1245, 1518, 1845, 307, 1350, 1418, 304, 108, 496, 1849, 1137, 399, 111, 1882, 335, 297, 585, 9, 1794, 386, 1884, 1480, 1896, 1646, 1241, 794, 1463, 923, 1249, 289, 302, 369, 478, 1707, 974, 1858, 183, 1443, 491, 703, 641, 1409, 866, 1691, 238, 986, 47, 1402, 199, 626, 1503, 837, 158, 1790, 667, 607, 800, 1514, 34, 619, 1679, 1550, 1529, 1703, 1603, 4, 716, 554, 699, 1283, 1508, 44, 116, 1822, 526, 1357, 208, 1898, 281, 1940, 676, 1923, 1482, 816, 1300, 632, 651, 249, 914, 1725, 326, 217, 1268, 936, 930, 614, 1367, 1605, 1174, 1248, 982, 1848, 519, 1499, 618, 1438, 521, 85, 780, 1991, 953, 1916, 309, 1831, 773, 296, 1279, 1827, 243, 1792, 1979, 166, 336, 1516, 203, 1149, 741, 1368, 1869, 330, 1067, 1887, 198, 1803, 1696, 1348, 403, 1931, 633, 1612, 1876, 686, 639, 1489, 1689, 1200, 431, 1032, 396, 1259, 1096, 1528, 1314, 542, 949, 250, 450, 1712, 1866, 5, 225, 954, 1049, 514, 414, 1928, 1525, 734, 1842, 1952, 1223, 204, 119, 882, 423, 627, 807, 90, 1552, 994, 1719, 459, 655, 728, 439, 1510, 1614, 2000, 269, 210, 1104, 1634, 1987, 114, 1841, 583, 23, 75, 411, 989, 372, 1527, 1450, 1669, 218, 920, 1068, 1444, 588, 276, 82, 1994, 1028, 8, 1702, 671, 1836, 234, 754, 705, 1439, 1690, 406, 1226, 206, 1373, 1546, 1609, 368, 662, 1566, 1998, 684, 1188, 544, 1490, 791, 985, 428, 538, 811, 173, 1749, 1676, 1693, 1227, 1543, 1779, 1140, 1183, 1918, 604, 1202, 910, 245, 1675, 543, 1652, 1874, 1892, 1965, 1351, 524, 142, 1641, 1602, 1950, 1736, 1456, 1843, 1867, 239, 1077, 1424, 242, 1977, 1280, 608, 950, 1800, 1687, 1011, 1548, 1063, 612, 1751, 868, 192, 1405, 1674, 1069, 442, 1837, 1004, 593, 1753, 357, 1581, 702, 1122, 725, 1015, 1333, 1664, 95, 1953, 1594, 308, 207, 26, 518, 1587, 1088, 515, 1018, 93, 977, 1112, 1954, 189, 511, 1798, 1812, 834, 918, 575, 155, 574, 1421, 1575, 933, 1885, 785, 449, 404, 532, 1561, 1, 415, 1750, 48, 1116, 454, 1366, 813, 1606, 1239, 1765, 1852, 913, 1134, 1788, 493, 1912, 1287, 288, 1255, 1317, 364, 1220, 186, 1839, 1597, 1524, 1008, 1978, 285, 1024, 1814, 1963, 765, 315, 1371, 892, 1208, 174, 810, 1135, 1313, 620, 1598, 945, 492, 898, 1935, 447, 1828, 164, 1130, 78, 1285, 1428, 1271, 551, 1382, 1796, 479, 279, 793]
        random.shuffle(arr)
        l = len(arr)
    else:
        for i in range(l):
            v = int(input())
            arr.append(v)
    return arr, l


def sort_by_algo(algo, array, length):
    start = datetime.datetime.now()
    sorted = algo(array, length)
    end = datetime.datetime.now()
    if length > 20:
        print(algo.__name__[:5] + "... |" + str(sorted[:11])+ "..." + str(sorted[-10:]) + "  -   " + str(end - start))
    else:

        print(algo.__name__[:5] + "... |" + str(sorted) + "  -   " + str(end - start))


if __name__ == '__main__':
    array, length = scan_inputs()

    sort_by_algo(selection_sort, array.copy(), length)
    sort_by_algo(bubble_sort, array.copy(), length)
    sort_by_algo(insertion_sort, array.copy(), length)
    sort_by_algo(merge_sort, array.copy(), length)
    sort_by_algo(heap_sort, array.copy(), length)